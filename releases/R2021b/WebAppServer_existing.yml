AWSTemplateFormatVersion: 2010-09-09
Description: MATLAB Web App Server R2021b with Existing VPC
Parameters:
  KeyPairName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: "Choose an existing Amazon EC2 key pair to connect to the EC2 instance hosting MATLAB Web App Server. If you do not have a key pair, create one in the EC2 console >> Network & Security >> Key Pairs."
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
  AdminIPAddress:
    Description: "Specify the IP address of the administrator using CIDR notation. The administrator can remotely connect to the EC2 instance that hosts the MATLAB Web App Server and administer it. The IP address can be a single IP address or a range of IP addresses. The format for this field is IP Address/Mask.Example: xxx.xxx.xxx.xxx/32"
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  UseSameIPForClient:
    Description: "Choose \"Yes\" if you know that the same set of users will administer the server and access web apps on the apps homepage. Choose \"No\" if the users accessing web apps on the apps homepage are different from the users administering the server."
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
  ClientIPAddress:
    Description: "Complete this field only if you selected \"No\" in the previous field. Specify the IP address range that can access the MATLAB Web App Server home page in CIDR notation."
    Type: String
    Default: ''

  WorkerInstanceType:
    Description: 'Specify the EC2 instance type to use for the server instance. For more information on Amazon EC2 instance types and sizes, see https://aws.amazon.com/ec2/instance-types/ .'    
    Default: m5.xlarge
    Type: String
    MinLength: 1
    ConstraintDescription: The server instance type must be specified.
  WorkerSystem:
    Description: Choose between Windows (Windows Server) and Linux (Ubuntu).
    Type: String
    AllowedValues:
      - Ubuntu
      - Windows

  DeployLicenseServer:
    Description: "Specify whether you want to deploy a network license manager to the existing VPC. If you select \"No\", you must provide the IP address of a network license manger that has already been deployed to the existing VPC."
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
  ExistingLicenseServer:
    Description: "Specify the IP address of the network license manager that has already been deployed to the existing VPC. Leave this field unchanged if you are deploying a new network license manager to the existing VPC and chose \"Yes\" for the previous option."
    Type: String
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x
    Default: "0.0.0.0"
  Password:
    Description: "Specify a password for the network license manager. Use this password to log in to the network license manager after the stack has been successfully created."
    Type: String
    NoEcho: true
    ConstraintDescription: ""
    Default: ""
  ConfirmPassword:
    Description: "Reenter the password to log in to the Network License Manager for MATLAB dashboard."
    Type: String
    NoEcho: true
    ConstraintDescription: ""
    Default: ""

  ExistingVPC:
    Description: ID of your existing VPC where you want to deploy this solution.
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: Must be the ID of an existing VPC.
    Default: ''
  ExistingVPCAddress:
    Description: Get the IP address range from the existing VPC you selected above.
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  AllowPublicIP:
    Description: "Specify whether the deployed virtual machine uses public IP address. If you select \"No\", you must provide a private subnet in next field to deploy MATLAB Web App Server"
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
  ExistingSubnet1:
    Description: "Specify the ID of a public or private subnet within the existing VPC that will host the server. If you selected \"Yes\" in previous field for assigning a public IP, choose a public subnet. Otherwise, choose a private subnet."
    Type: 'AWS::EC2::Subnet::Id'
    ConstraintDescription: Must be the ID of an existing Subnet.
    Default: ''
  ExistingSubnet2:
    Description: "ID of a public subnet within the existing VPC that will host server resources. This subnet can be the same as the one hosting MATLAB Web App Server, as long as the subnet hosting the server is public. If the subnet hosting the server is private, then this subnet must be a different public subnet."
    Type: 'AWS::EC2::Subnet::Id'
    ConstraintDescription: Must be the ID of an existing Subnet.
    Default: ''
  ExistingSubnet3:
    Description: "ID of a public subnet within the existing VPC that will host server resources. This should be different from Subnet 1."
    Type: 'AWS::EC2::Subnet::Id'
    ConstraintDescription: Must be the ID of an existing Subnet.
    Default: ''

  SSLCertificateARN:
    Description: "Specify the Amazon Resource Name (ARN) of the SSL certificate you uploaded to the AWS Certificate Manager. The ARN facilitates connecting to the apps home page using an HTTPS connection. To retrieve an ARN, type \"Certificate Manager\" in the AWS console search box at the top of the page, and open the AWS Certificate Manager in a new tab. Example: arn:aws:acm:us-east-1:012345678910:certificate/666abcd6-ab6c-6ab6-a666-a666666bcd66"
    Type: String
    MinLength: 1
    ConstraintDescription: The Certificate ARN must be specified

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Settings for Existing Virtual Private Cloud (VPC)
        Parameters:
          - ExistingVPC
          - ExistingVPCAddress
          - AllowPublicIP
          - ExistingSubnet1
          - ExistingSubnet2
          - ExistingSubnet3
      - Label:
          default: Settings for Hosting MATLAB Web App Server
        Parameters:
          - KeyPairName
          - AdminIPAddress
          - UseSameIPForClient
          - ClientIPAddress
          - SSLCertificateARN
          - WorkerInstanceType
          - WorkerSystem
      - Label:
          default: Settings for Network License Manager
        Parameters:
          - DeployLicenseServer
          - ExistingLicenseServer
          - Password
          - ConfirmPassword

    ParameterLabels:
      ExistingVPC:
        default: Existing VPC ID
      ExistingVPCAddress:
        default: IP Address Range of Existing VPC
      ExistingSubnet1:
        default: Subnet for MATLAB Web App Server
      ExistingSubnet2:
        default: Public Subnet 1
      ExistingSubnet3:
        default: Public Subnet 2
      KeyPairName:
        default: Name of Existing Amazon EC2 Key Pair
      WorkerInstanceType:
        default: EC2 Instance Type
      WorkerSystem:
        default: Operating System
      DeployLicenseServer:
        default: Deploy Network License Manager
      ExistingLicenseServer:
        default: IP Address of Existing Network License Manager
      Password:
        default: Password for Network License Manager
      ConfirmPassword:
        default: Confirm Password
      ClientIPAddress:
        default: IP Addresses Allowed to Access MATLAB Web App Server Apps Home Page in CIDR Notation
      UseSameIPForClient:
        default: Do You Want to Use the Same IP Addresses to the Access MATLAB Web App Server Apps Home Page?
      AdminIPAddress:
        default: IP Address of MATLAB Web App Server Administrator in CIDR Notation
      AllowPublicIP:
        default: Assign Public IP to EC2 Instance Hosting MATLAB Web App Server
      SSLCertificateARN:
        default: ARN of SSL Certificate 

Conditions:
  DoDeployLicenseServer: !Equals 
    - 'Yes'
    - !Ref DeployLicenseServer
  DoPublicIP: !Equals ['Yes', !Ref AllowPublicIP]
  SameAdminIP: !Equals 
    - 'Yes'
    - !Ref UseSameIPForClient

Rules:
  checkLicenseServerPassword:
    RuleCondition:  !Equals
      - !Ref DeployLicenseServer
      - 'Yes'
    Assertions:
      - Assert: !And
          - !Not [!Equals ['', !Ref Password]]
          - !Not [!Equals ['', !Ref ConfirmPassword]]
        AssertDescription: 'Password is required when require to deploy license server'
      - Assert: !Equals [!Ref Password, !Ref ConfirmPassword]
        AssertDescription: "Passwords do not match"
  checkSubnetInVPC:
    Assertions:
      - Assert: !EachMemberEquals
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !Ref ExistingVPC
        AssertDescription: Subnet must exist in the VPC you have selected
  checkClientIPAddressProvided:
    RuleCondition: !Equals 
      - !Ref UseSameIPForClient
      - 'No'
    Assertions:
    - Assert: !Not [!Equals ['', !Ref ClientIPAddress]]
      AssertDescription: 'Must provide Client IP address when choose not to use the same IP address ad Admin'

Outputs:
  MATLABWebAppServerAppsHomePage:
    Description: URL to the MATLAB Web App Server apps home page
    Value: !GetAtt MatlabWebAppServerResourcesStack.Outputs.MatlabWebappServerVM
  MATLABWebAppServerAppsS3Bucket:
    Description: URL to Amazon S3 bucket for storing web apps (.ctf files)
    Value: !GetAtt MatlabWebAppServerResourcesStack.Outputs.MATLABWebAppServerApplicationsBucket
  MATLABWebAppServerEC2Instance:
    Description: URL to EC2 instance hosting MATLAB Web App Server. Use this address to remotely connect and manage the server
    Value: !GetAtt MatlabWebAppServerResourcesStack.Outputs.MatlabWebappServerInstance
  MATLABWebAppServerLogGroup:
    Description: URL to server logs on CloudWatch
    Value: !GetAtt MatlabWebAppServerResourcesStack.Outputs.MATLABWebappServerLogGroup
  MATLABWebAppServerLicenseManager:
    Description: URL to Network License Manager home page. Use this address to upload your license file.
    Value: !If
      - DoDeployLicenseServer
      - !GetAtt MatlabWebAppServerLicenseServerStack.Outputs.ServerAddress
      - 'License Server was not deployed with this stack'
  MATLABWebAppServerOIDCRedirectUrl:
    Description: Redirect URL for configuring OIDC authentication
    Value: !GetAtt MatlabWebAppServerResourcesStack.Outputs.MATLABWebappServerOIDCRedirectURL

Resources:
  MatlabWebAppServerLicenseServerStack:
    Condition: DoDeployLicenseServer
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://network-license-manager-for-matlab-on-aws.s3.amazonaws.com/R2020b/license-manager-template.json'
      Parameters:
        VPC: !Ref ExistingVPC
        Subnet: !Ref ExistingSubnet2
        ClientIPAddress: !Ref AdminIPAddress
        ServerInstanceType: t2.micro
        SSHKeyName: !Ref KeyPairName
        Password: !Ref Password
        ConfirmPassword: !Ref ConfirmPassword

  MatlabWebAppServerResourcesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://joeywebapplambdaarchive.s3.amazonaws.com/CommonResourcesStack.yml'
      Parameters:
        ExistingVPC: !Ref ExistingVPC
        ExistingVPCAddress: !Ref ExistingVPCAddress
        ExistingSubnet1: !Ref ExistingSubnet1
        ExistingSubnet2: !Ref ExistingSubnet2
        ExistingSubnet3: !Ref ExistingSubnet3
        KeyPairName: !Ref KeyPairName
        ClientIPAddress: !If [SameAdminIP, !Ref AdminIPAddress, !Ref ClientIPAddress]
        AdminIPAddress: !Ref AdminIPAddress
        AllowPublicIP: !Ref AllowPublicIP
        WorkerInstanceType: !Ref WorkerInstanceType
        WorkerSystem: !Ref WorkerSystem
        SSLCertificateARN: !Ref SSLCertificateARN
        LicenseServerSecurityGroup: !If
          - DoDeployLicenseServer
          - !GetAtt MatlabWebAppServerLicenseServerStack.Outputs.SecurityGroup
          - ''
        LicenseServerPrivateDNS: !If
          - DoDeployLicenseServer
          - !GetAtt MatlabWebAppServerLicenseServerStack.Outputs.ServerPrivateDNS
          - !Ref ExistingLicenseServer
        ParentStackName: !Ref AWS::StackName
